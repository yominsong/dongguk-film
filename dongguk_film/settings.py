"""
Django settings for dongguk_film project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

from pathlib import Path
import os, json

ENVIRONMENT = os.environ.get("DJANGO_ENVIRONMENT", "development")

IS_PRODUCTION = ENVIRONMENT == "production"

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
secrets = os.path.join(BASE_DIR, "secrets.json")

with open(secrets) as f:
    secrets = json.loads(f.read())


def get_secret(setting):
    return secrets[setting]


SECRET_KEY = get_secret("SECRET_KEY")

AIRTABLE = get_secret("AIRTABLE")

AWS = get_secret("AWS")

DISCORD = get_secret("DISCORD")

GCP_SA = get_secret("GCP_SA")

GOOGLE_DOCS = get_secret("GOOGLE_DOCS")

KAKAO = get_secret("KAKAO")

NCP = get_secret("NCP")

NOTION = get_secret("NOTION")

OPENAI = get_secret("OPENAI")

SCRAPEOPS = get_secret("SCRAPEOPS")

SHORT_IO = get_secret("SHORT_IO")

UNSPLASH = get_secret("UNSPLASH")

UPSTAGE = get_secret("UPSTAGE")

PUBLIC_DATA = get_secret("PUBLIC_DATA")

OPS_CONTACT = get_secret("OPS_CONTACT")

DND = get_secret("DND")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False if IS_PRODUCTION else True

ALLOWED_HOSTS = ["dongguk.film"] if IS_PRODUCTION else ["*"]


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.google",
    "allauth.socialaccount.providers.kakao",
    "allauth.socialaccount.providers.naver",
    "home",
    "facility",
    "equipment",
    "workspace",
    "project",
    "dflink",
    "notice",
    "users",
    "utility",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "dongguk_film.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "dongguk_film" / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "dongguk_film.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = "ko-kr"

TIME_ZONE = "Asia/Seoul"

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = "static/"

STATICFILES_DIRS = [BASE_DIR / "dongguk_film" / "static"]

STATIC_ROOT = BASE_DIR / "dongguk_film" / "staticfiles"

# Media files

MEDIA_URL = "media/"

MEDIA_ROOT = BASE_DIR / "dongguk_film" / "mediafiles"

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# Django-allauth

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

SITE_ID = 1

LOGIN_REDIRECT_URL = "/"

LOGOUT_REDIRECT_URL = "/"

SESSION_COOKIE_AGE = 3600

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

SESSION_SAVE_EVERY_REQUEST = True

SOCIALACCOUNT_FORMS = {
    "signup": "users.forms.SocialSignupForm",
}

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "PROCESS": "login",
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "offline",
            "prompt": "select_account",
        },
    },
    "kakao": {
        "AUTH_PARAMS": {
            "prompt": "login",
        },
    },
    "naver": {
        "AUTH_PARAMS": {
            "auth_type": "reauthenticate",
        },
    },
}

SOCIALACCOUNT_AUTO_SIGNUP = False

SOCIALACCOUNT_EMAIL_REQUIRED = True

SOCIALACCOUNT_LOGIN_ON_GET = True  # TODO: need to use POST request

ACCOUNT_LOGOUT_ON_GET = True  # TODO: need to use POST request

ACCOUNT_USERNAME_REQUIRED = False

ACCOUNT_EMAIL_REQUIRED = True

ACCOUNT_AUTHENTICATION_METHOD = "email"

# Email

EMAIL_HOST = "smtp.gmail.com"

EMAIL_PORT = "587"

EMAIL_HOST_USER = OPS_CONTACT["EMAIL"]["ADDRESS"]

EMAIL_HOST_PASSWORD = OPS_CONTACT["EMAIL"]["PASSWORD"]

EMAIL_USE_TLS = True

DEFAULT_FROM_EMAIL = OPS_CONTACT["EMAIL"]["ADDRESS"]
